{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ulam/skill_up/next.js/pages/notes/index.js\";\nimport { jsx } from \"theme-ui\";\nimport React from \"react\";\nimport Link from \"next/link\"; // AFTER setting up theme-ui\n\nexport default (() => {\n  const notes = new Array(15).fill(1).map((e, i) => ({\n    id: i,\n    title: `This is my note ${i}`\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    sx: {\n      variant: \"containers.page\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\"\n      },\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        sx: {\n          width: \"33%\",\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/notes/[id]\",\n          as: `/notes/${note.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            sx: {\n              textDecoration: \"none\",\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              sx: {\n                variant: \"containers.card\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: note.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}); // BEFORE setting up theme-ui\n// export default () => {\n//   const notes = new Array(15)\n//     .fill(1)\n//     .map((e, i) => ({ id: i, title: `Note: ${i}` }));\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       {notes.map(note => (\n//         <div>\n//           {/* only need 'as' if you're using dynamic routes. If you already know the route, don't need to use 'as'. */}\n//           <Link key={note.id} href='/notes/[id]' as={`/notes/${note.id}`}>\n//             <a>\n//               <b>{note.title}</b>\n//             </a>\n//           </Link>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["/Users/ulam/skill_up/next.js/pages/notes/index.js"],"names":["jsx","React","Link","notes","Array","fill","map","e","i","id","title","variant","display","justifyContent","alignItems","flexWrap","note","width","p","textDecoration","cursor"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,gBAAe,MAAM;AACnB,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,EACXC,IADW,CACN,CADM,EAEXC,GAFW,CAEP,CAACC,CAAD,EAAIC,CAAJ,MAAW;AAAEC,IAAAA,EAAE,EAAED,CAAN;AAASE,IAAAA,KAAK,EAAG,mBAAkBF,CAAE;AAArC,GAAX,CAFO,CAAd;AAIA,sBACE;AAAK,IAAA,EAAE,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAT;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,cAAc,EAAE,eAFd;AAGFC,QAAAA,UAAU,EAAE,QAHV;AAIFC,QAAAA,QAAQ,EAAE;AAJR,OADN;AAAA,gBAQGZ,KAAK,CAACG,GAAN,CAAUU,IAAI,iBACb;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,CAAC,EAAE;AAAnB,SAAT;AAAA,+BACE,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAC,aAAzB;AAAuC,UAAA,EAAE,EAAG,UAASF,IAAI,CAACP,EAAG,EAA7D;AAAA,iCACE;AAAG,YAAA,EAAE,EAAE;AAAEU,cAAAA,cAAc,EAAE,MAAlB;AAA0BC,cAAAA,MAAM,EAAE;AAAlC,aAAP;AAAA,mCACE;AAAK,cAAA,EAAE,EAAE;AAAET,gBAAAA,OAAO,EAAE;AAAX,eAAT;AAAA,qCACE;AAAA,0BAASK,IAAI,CAACN;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAWM,IAAI,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AARH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/BD,E,CAiCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { jsx } from \"theme-ui\";\nimport React from \"react\";\nimport Link from \"next/link\";\n\n// AFTER setting up theme-ui\nexport default () => {\n  const notes = new Array(15)\n    .fill(1)\n    .map((e, i) => ({ id: i, title: `This is my note ${i}` }));\n\n  return (\n    <div sx={{ variant: \"containers.page\" }}>\n      <h1>My Notes</h1>\n\n      <div\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\"\n        }}\n      >\n        {notes.map(note => (\n          <div sx={{ width: \"33%\", p: 2 }}>\n            <Link key={note.id} href='/notes/[id]' as={`/notes/${note.id}`}>\n              <a sx={{ textDecoration: \"none\", cursor: \"pointer\" }}>\n                <div sx={{ variant: \"containers.card\" }}>\n                  <strong>{note.title}</strong>\n                </div>\n              </a>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// BEFORE setting up theme-ui\n// export default () => {\n//   const notes = new Array(15)\n//     .fill(1)\n//     .map((e, i) => ({ id: i, title: `Note: ${i}` }));\n\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n\n//       {notes.map(note => (\n//         <div>\n//           {/* only need 'as' if you're using dynamic routes. If you already know the route, don't need to use 'as'. */}\n//           <Link key={note.id} href='/notes/[id]' as={`/notes/${note.id}`}>\n//             <a>\n//               <b>{note.title}</b>\n//             </a>\n//           </Link>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}