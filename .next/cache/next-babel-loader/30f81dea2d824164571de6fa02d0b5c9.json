{"ast":null,"code":"import _toConsumableArray from \"/Users/ulam/skill_up/next.js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ulam/skill_up/next.js/pages/notes/[...params].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\n\nvar Page = function Page() {\n  _s();\n\n  var router = useRouter(); // params is an [] that matches everything after\n  // ex: /notes/1/2/3/4\n  // params = [\"1\", \"2\", \"3\", \"4\"]\n  // this will allow you to write a route like \"/notes/:id/:id/:id\"\n\n  var params = router.query.params;\n  console.log(params);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Note: \", _toConsumableArray(params)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Page, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/ulam/skill_up/next.js/pages/notes/[...params].js"],"names":["React","useRouter","Page","router","params","query","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGF,SAAS,EAAxB,CADiB,CAEjB;AACA;AACA;AACA;;AALiB,MAMTG,MANS,GAMED,MAAM,CAACE,KANT,CAMTD,MANS;AAOjBE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,sBAAO;AAAA,4CAAeA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAVD;;GAAMF,I;UACWD,S;;;KADXC,I;AAYN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\n\nconst Page = () => {\n  const router = useRouter();\n  // params is an [] that matches everything after\n  // ex: /notes/1/2/3/4\n  // params = [\"1\", \"2\", \"3\", \"4\"]\n  // this will allow you to write a route like \"/notes/:id/:id/:id\"\n  const { params } = router.query;\n  console.log(params);\n\n  return <h1>Note: {[...params]}</h1>;\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}