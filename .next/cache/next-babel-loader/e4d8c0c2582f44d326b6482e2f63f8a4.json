{"ast":null,"code":"var _jsxFileName = \"/Users/ulam/skill_up/next.js/pages/notes/index.js\",\n    _this = this;\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport React from \"react\";\nimport Link from \"next/link\"; //* AFTER setting up theme-ui\n\nexport var __N_SSP = true;\nexport default (function () {\n  var notes = new Array(15).fill(1).map(function (e, i) {\n    return {\n      id: i,\n      title: \"This is my note \".concat(i)\n    };\n  });\n  return jsx(\"div\", {\n    sx: {\n      variant: \"containers.page\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    },\n    __self: _this\n  }, jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    },\n    __self: _this\n  }, \"My Notes\"), jsx(\"div\", {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    },\n    __self: _this\n  }, notes.map(function (note) {\n    return jsx(\"div\", {\n      sx: {\n        width: \"33%\",\n        p: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      },\n      __self: _this\n    }, jsx(Link, {\n      key: note.id,\n      href: \"/notes/[id]\",\n      as: \"/notes/\".concat(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      },\n      __self: _this\n    }, jsx(\"a\", {\n      sx: {\n        textDecoration: \"none\",\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      },\n      __self: _this\n    }, jsx(\"div\", {\n      sx: {\n        variant: \"containers.card\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      },\n      __self: _this\n    }, jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      },\n      __self: _this\n    }, note.title)))));\n  })));\n}); //* getServerSideProps will get the data upon every request (not at build time)\n//* Great for dynamic things, provides you with params\n//* will only run on the server so will not show on the front end\n//* BEFORE setting up theme-ui\n// export default () => {\n//   const notes = new Array(15)\n//     .fill(1)\n//     .map((e, i) => ({ id: i, title: `Note: ${i}` }));\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       {notes.map(note => (\n//         <div>\n//           {/* only need 'as' if you're using dynamic routes. If you already know the route, don't need to use 'as'. */}\n//           <Link key={note.id} href='/notes/[id]' as={`/notes/${note.id}`}>\n//             <a>\n//               <b>{note.title}</b>\n//             </a>\n//           </Link>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["/Users/ulam/skill_up/next.js/pages/notes/index.js"],"names":["jsx","React","Link","notes","Array","fill","map","e","i","id","title","variant","display","justifyContent","alignItems","flexWrap","note","width","p","textDecoration","cursor"],"mappings":";;;AAAA;;AACA;AACA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;;AACA,gBAAe,YAAM;AACnB,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,EACXC,IADW,CACN,CADM,EAEXC,GAFW,CAEP,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAW;AAAEC,MAAAA,EAAE,EAAED,CAAN;AAASE,MAAAA,KAAK,4BAAqBF,CAArB;AAAd,KAAX;AAAA,GAFO,CAAd;AAIA,SACE;AAAK,IAAA,EAAE,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,cAAc,EAAE,eAFd;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,QAAQ,EAAE;AAJR,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGZ,KAAK,CAACG,GAAN,CAAU,UAAAU,IAAI;AAAA,WACb;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,CAAC,EAAE;AAAnB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,IAAD;AAAM,MAAA,GAAG,EAAEF,IAAI,CAACP,EAAhB;AAAoB,MAAA,IAAI,EAAC,aAAzB;AAAuC,MAAA,EAAE,mBAAYO,IAAI,CAACP,EAAjB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,EAAE,EAAE;AAAEU,QAAAA,cAAc,EAAE,MAAlB;AAA0BC,QAAAA,MAAM,EAAE;AAAlC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAE;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASK,IAAI,CAACN,KAAd,CADF,CADF,CADF,CADF,CADa;AAAA,GAAd,CARH,CAHF,CADF;AA0BD,CA/BD,E,CAiCA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport React from \"react\";\nimport Link from \"next/link\";\n\n//* AFTER setting up theme-ui\nexport default () => {\n  const notes = new Array(15)\n    .fill(1)\n    .map((e, i) => ({ id: i, title: `This is my note ${i}` }));\n\n  return (\n    <div sx={{ variant: \"containers.page\" }}>\n      <h1>My Notes</h1>\n\n      <div\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\"\n        }}\n      >\n        {notes.map(note => (\n          <div sx={{ width: \"33%\", p: 2 }}>\n            <Link key={note.id} href='/notes/[id]' as={`/notes/${note.id}`}>\n              <a sx={{ textDecoration: \"none\", cursor: \"pointer\" }}>\n                <div sx={{ variant: \"containers.card\" }}>\n                  <strong>{note.title}</strong>\n                </div>\n              </a>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n//* getServerSideProps will get the data upon every request (not at build time)\n//* Great for dynamic things, provides you with params\n//* will only run on the server so will not show on the front end\n\nexport async function getServerSideProps() {\n  // should put baseURL in .env file\n  const res = await fetch(`http://localhost:3000/api/note/`);\n  // data will come back as a data {}, and you can deconstruct it so it's not data.data\n  const { data } = await res.json();\n  console.log(data);\n  return {\n    props: { notes: data }\n  };\n}\n\n//* BEFORE setting up theme-ui\n// export default () => {\n//   const notes = new Array(15)\n//     .fill(1)\n//     .map((e, i) => ({ id: i, title: `Note: ${i}` }));\n\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n\n//       {notes.map(note => (\n//         <div>\n//           {/* only need 'as' if you're using dynamic routes. If you already know the route, don't need to use 'as'. */}\n//           <Link key={note.id} href='/notes/[id]' as={`/notes/${note.id}`}>\n//             <a>\n//               <b>{note.title}</b>\n//             </a>\n//           </Link>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}